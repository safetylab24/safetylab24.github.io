HTML CODE

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Copy to Clipboard Example</title>
    <link rel="stylesheet" href="style.css">
    <script src="script.js" defer></script>
</head>

<body>
    <div class="custom-cursor-border"></div>
    <div class="custom-cursor"></div>

    <nav>
        <a href="index.html" class="logo hover-text">Cross-View Centerpoint</a>
        <div class="nav-items">
            <a id="github-link" href="https://github.com/safetylab24/CVCP"><span class="hover-text">See the
                    Code</span></a>
        </div>
        <div class="nav-items">
            <a href="about.html" class="hover-text">About</a>
        </div>
        <div class="nav-items">
            <button id="copy-text"><span class="hover-text">safetylab24@gmail.com</span></button>
        </div>
    </nav>

    <section class="header">
        <h1 id="main-header">Cross View Transformers Demo</h1>
    </section>

    <section class="cards">
        <div class="card-border-wrap">
            <div class="card">
                <img src="images/138LEFTFRONT.png" id="front-left" alt="Front Left View">
                <img src="images/138FRONT.png" id="front" alt="Front View">
                <img src="images/138RIGHTFRONT.png" id="front-right" alt="Front Right View">
                <img src="images/138RIGHTBACK.png" id="back-right" alt="Back Right View">
                <img src="images/138BACK.png" id="back" alt="Back View">
                <img src="images/138LEFTBACK.png" id="back-left" alt="Back Left View">
            </div>
        </div>
        <div class="card-border-wrap" id="bev-border">
            <div class="card" id="bev">
                <!-- <img src="images/138BEVLABEL.png" class="" id="bev-image" alt="BEV Label"> -->
                <div class="keypoint" id="keypoint1"></div>
                <div class="keypoint" id="keypoint2"></div>
            </div>
        </div>
    </section>

    <footer></footer>
</body>

</html>


CSS CODE

:root {
    --primary-background-shadow: #121112;
    --primary-background: #191819;
    --secondary-background: #373437;
    --primary-text: #ebeaea;
    --secondary-text: #9c9b9b;
    --yellow: #f3cd8d;
    --orange: #eb8d28;
    --umbra: #8d321d;
    --dark-umbra: #2a1627;
    --grey: #857c8d;
    --black: #06071b;
}

img {  
   user-select: none;
   -moz-user-select: none;
   -webkit-user-drag: none;
   -webkit-user-select: none;
   -ms-user-select: none;
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: 'Lucida Console', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    background-color: var(--primary-background);
    color: var(--primary-text);
    border: none;
    cursor: none;
    user-select: none;
    overflow: hidden;
}

.debug {
    border: 2px dashed red;
}

#main-header {
    font-size: 3rem;
    text-shadow: var(--umbra) 1px 0 10px;
}

.custom-cursor-border {
    position: fixed;
    top: 0;
    left: 0;
    opacity: 100%;
    backdrop-filter: blur(6px);
    border-radius: 50%;
    pointer-events: none;
    transform: translate(-50%, -50%);
    transition: width 0.2s ease-out, height 0.2s ease-out, opacity 0.2s ease-out;
    z-index: 9998;
    background: linear-gradient(135deg, var(--yellow) 0%, var(--umbra) 100%);
    box-shadow: 1px 1px 5px 2px var(--black);
}

.custom-cursor {
    position: fixed;
    top: 0;
    left: 0;
    opacity: 100%;
    backdrop-filter: blur(6px);
    border-radius: 50%;
    pointer-events: none;
    transform: translate(-50%, -50%);
    transition: width 0.2s ease-out, height 0.2s ease-out, opacity 0.2s ease-out;
    z-index: 9999;
    background: linear-gradient(135deg, var(--dark-umbra) 0%, var(--black) 100%);
}

.header {
    margin: 3vh 3vw 0px 3vw;
    width: 94vw;
    color: white;
    size: 3rem;
    text-align: center;
}

#header-about {
    display: flex;
    justify-content: center;
}

.vl {
    position: absolute;
    border-left: 1px solid white;
    height: 10vh;
    left: 50vw;
    top: 130vh;
}

nav {
    min-height: 5rem;
    max-height: 5rem;
    display: flex;
    align-items: center;
    border-bottom: 0.5px solid var(--secondary-background);
    box-shadow: 0px 0px 10px 3px var(--primary-background-shadow);
    padding: 0rem 0vw;
}

.nav-items {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 1.4rem;
}

.logo {
    font-size: 2rem;
    font-stretch: narrower;
    font-weight: bold;
    padding: 0 2rem;
}

nav a {
    text-decoration: none;
    padding: 0 1.5rem;
}

hr.footer {
    margin: 5vh 0 0 3vw;
    width: 94vw;
    border: 0.5px solid white;
}

footer {
    position: absolute;
    bottom: 0;
    width: 100vw;
    height: 2vh;
    padding: 1vh 5vw 0 5vw;
    display: flex;
    flex-direction: row;
    column-gap: 10%;
    border: 0.5px solid var(--tertiary-background);
    border-top: 0.5px solid var(--secondary-background);
    box-shadow: 0px 0px 10px 3px var(--primary-background-shadow);
}

.cards {
    display: grid;
    grid-template-rows: 1fr 1fr;
    grid-template-columns: 1fr;
    grid-auto-flow: row;
    grid-gap: 2vh;
    padding: 1vh 17.5vw 1vh 17.5vw;
    height: 76vh;
}

#about-cards {
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr;
    grid-gap: 3vw;
    height: 70vh;
    width: 100vw;
    padding-top: 3vh;
}

.card-border-wrap {
    width: 100%;
    height: 100%;
    margin: 0%;
    padding: 0.25% 0.25%;
    border-radius: 20px;
    background: linear-gradient(135deg, var(--yellow), var(--umbra));
    display: flex;
    flex-direction: column;
    box-shadow: 2px 2px 10px 4px var(--black);
}

.card-border-wrap:hover {
    width: 102%;
    height: 102%;
    translate: -1% -1%;
    transition: width 0.2s ease-in-out, height 0.2s ease-in-out, translate 0.2s ease-in-out;
}

.card-border-wrap:not(:hover) {
    transition: width 0.2s ease-in-out, height 0.2s ease-in-out, translate 0.2s ease-in-out;
}

.card {
    position: relative;
    width: 100%;
    height: 100%;
    border-radius: 20px;
    display: grid;
    grid-gap: 0px;
    justify-items: stretch;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr;
    flex-direction: row;
    margin: 0;
}

#bev-border {
    height: 100%;
    width: 33%;
    margin: 0 0 0 21.9vw;
    padding: 0.25%;
}

#bev-border:hover {
    height: 102%;
    width: 33.8%;
    translate: -0.2vw -0.2vw;
    transition: width 0.2s ease-in-out, height 0.2s ease-in-out, translate 0.2s ease-in-out;
}

#bev-border:not(:hover) {
    transition: width 0.2s ease-in-out, height 0.2s ease-in-out, translate 0.2s ease-in-out;
}

#bev {
    display: flex;
    pointer-events: none;
}

.keypoint {
    position: absolute;
    width: 0.5vw;
    height: 0.5vw;
    border-radius: 50%;
    background: linear-gradient(135deg, var(--yellow), var(--umbra));
    z-index: 9999999;
    pointer-events: auto;
    transition: width 0.2s ease-out, height 0.2s ease-out, translate 0.2s ease-out;
}

#keypoint1{
    left: 20%;
    top: 20%;
}

#keypoint2{
    left: 30%;
    top: 60%;
}

#bev-image {
    width: 100%;
    height: 100%;
}

#about-header {
    font-size: 4rem;
    text-shadow: var(--umbra) 1px 0 10px;
}

.about-card {
    display: flex;
    flex-direction: column;
    padding: 1rem;
    align-items: top;
}

.about-text {
    text-align: center;
    font-size: 2rem;
    min-height: 3rem;
}

.about-p {
    padding: 2rem;
    text-align: center;
    font-size: 1rem;
}

.card:hover {
    transition: width 0.2s ease-in-out, height 0.2s ease-in-out, margin 0.2s ease-in-out;
}

.card:not(:hover) {
    transition: width 0.2s ease-in-out, height 0.2s ease-in-out, margin 0.2s ease-in-out;
}

.project-hero {
    padding: 5vh 20vw;
    display: grid;
    min-height: 42vh;
    text-align: center;
}

.hover-text {
    transition: color 0.3s ease;
}

.hover-text:hover {
    color: white;
}

.hover-text:not(:hover) {
    color: var(--secondary-text);
}

#nav-email {
    margin-left: 20vw;
    font-size: 1.5rem;
    min-width: 30vw;
    transition: content 1s;
}

#copy-text:hover span {
  display: none
}

#copy-text:hover:before {
  content: "Click to Copy Email"
}

#github-link {
    min-width: 13vw;
}

#github-link:hover span {
  display: none
}

#github-link:hover:before {
  content: "Open Github"
}

#copy-text {
    margin-left: 20vw;
    font-size: 1.5rem;
    min-width: 30vw;
    transition: content 1s;
}

JS CODE
document.addEventListener('DOMContentLoaded', function() {
    const customCursorBorder = document.querySelector('.custom-cursor-border');
    customCursorBorder.style.width = '10px';
    customCursorBorder.style.height = '10px';

    const customCursor = document.querySelector('.custom-cursor');
    customCursor.style.width = '6px';
    customCursor.style.height = '6px';

    document.addEventListener('mousemove', function(e) {
        const cursorX = e.clientX;
        const cursorY = e.clientY;

        customCursor.style.left = cursorX + 'px';
        customCursor.style.top = cursorY + 'px';

        customCursorBorder.style.left = cursorX + 'px';
        customCursorBorder.style.top = cursorY + 'px';
    });

    document.addEventListener('mousedown', function() {
        customCursor.style.width = '40px';
        customCursor.style.height = '40px';

        customCursorBorder.style.width = '42px';
        customCursorBorder.style.height = '42px';
        
        customCursor.style.opacity = '0.25';
        customCursorBorder.style.opacity = '0.25';
    });

    document.addEventListener('mouseup', function() {
        customCursor.style.width = '6px';
        customCursor.style.height = '6px';

        customCursorBorder.style.width = '10px';
        customCursorBorder.style.height = '10px';

        customCursor.style.opacity = '1';
        customCursorBorder.style.opacity = '1';
    });

    const elements = document.querySelectorAll('.keypoint');
    elements.forEach(element => {
        element.addEventListener("mouseover", (event) => {
            event.target.style.width = '1.5vw';
            event.target.style.height = '1.5vw';

            event.target.style.translate = '-0.5vw -0.5vw';
        });

        element.addEventListener("mouseout", (event) => {
            event.target.style.width = '0.5vw';
            event.target.style.height = '0.5vw';

            event.target.style.translate = '0vw 0vw';
        });
    });

    var keypoints = ["keypoint1", "keypoint2"];
    keypoints.forEach(keypoint => {
        const key = document.getElementById(String(keypoint));
        
        key.addEventListener("mouseover", (event) => {
            document.getElementById("back-left").src="images/" + String(keypoint) + "-back-left.png";
            document.getElementById("back-right").src="images/" + String(keypoint) + "-back-right.png";
            document.getElementById("front-left").src="images/" + String(keypoint) + "-front-left.png";
            document.getElementById("front-right").src="images/" + String(keypoint) + "-front-right.png";
            document.getElementById("front").src="images/" + String(keypoint) + "-front.png";
            document.getElementById("back").src="images/" + String(keypoint) + "-back.png";
        });

        key.addEventListener("mouseout", (event) => {
            document.getElementById("back-left").src="images/138LEFTBACK.png";
            document.getElementById("back-right").src="images/138RIGHTBACK.png";
            document.getElementById("front-left").src="images/138LEFTFRONT.png";
            document.getElementById("front-right").src="images/138RIGHTFRONT.png";
            document.getElementById("front").src="images/138FRONT.png";
            document.getElementById("back").src="images/138BACK.png";
        });
    });

    const copyToClipboard = str => {
                if (navigator && navigator.clipboard && navigator.clipboard.writeText) {
                    return navigator.clipboard.writeText(str);
                }
                return Promise.reject('The Clipboard API is not available.');
            };

            const copyTextElement = document.getElementById('copy-text');

            if (copyTextElement) {
                copyTextElement.addEventListener('click', () => {
                    const textToCopy = copyTextElement.textContent.trim();
                    copyToClipboard(textToCopy).then(() => {
                        alert('Text copied to clipboard: ' + textToCopy);
                    }).catch(err => {
                        console.error('Failed to copy text to clipboard:', err);
                    });
                });
            } else {
                console.error('Element with id "copy-text" not found.');
            }
});
